{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17222\\\\Documents\\\\Visual Studio 2019\\\\react_tuts\\\\dojo-blog\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [name, setName] = useState('Mario');\n\n  // const handleDelete = (id) => {\n  //     const newBlogs = blogs.filter(blog => blog.id !== id );\n  //     setBlogs(newBlogs);\n  // }\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch('http://localhost:8000/blogss').then(res => {\n        // we get response object\n        if (!res.ok) {\n          throw Error('could not fetch data for that resource');\n        }\n        return res.json(); // use the json method on that object \n      }).then(data => {\n        console.log(data);\n        setBlogs(data);\n        setIsPending(false);\n      }).catch(err => {\n        setError(err.message);\n      });\n    }, 1000);\n  }, []);\n\n  // useEffect(() => {\n  //     console.log('use effect ran');\n  //     console.log(name);\n  // }, [name]); \n  // this useEffect hook is gonna run,everytime there is a rerender\n  // e.g. data change or page reload\n  // [] is dependency array, empty [] means only run after first initial render\n  // [name] means only run this hook when name variable is changed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName('Luigi'),\n      children: \"Change name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"89wJu6YaWn4M5aW2SWhlJqvanQ8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","BlogList","Home","blogs","setBlogs","isPending","setIsPending","error","setError","name","setName","setTimeout","fetch","then","res","ok","Error","json","data","console","log","catch","err","message"],"sources":["C:/Users/17222/Documents/Visual Studio 2019/react_tuts/dojo-blog/src/Home.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport BlogList from \"./BlogList\";\r\n\r\nconst Home = () => {\r\n    const [blogs, setBlogs] = useState(null);\r\n    const [isPending,setIsPending] = useState(true);\r\n    const [error,setError] = useState(null);\r\n\r\n    const [name,setName] = useState('Mario');\r\n\r\n    // const handleDelete = (id) => {\r\n    //     const newBlogs = blogs.filter(blog => blog.id !== id );\r\n    //     setBlogs(newBlogs);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch('http://localhost:8000/blogss')\r\n                .then(res => {   // we get response object\r\n                    if (!res.ok){\r\n                        throw Error('could not fetch data for that resource');\r\n                    }\r\n                    return res.json();  // use the json method on that object \r\n                })\r\n                .then(data => {\r\n                    console.log(data);\r\n                    setBlogs(data);\r\n                    setIsPending(false);\r\n                })\r\n                .catch(err => {\r\n                    setError(err.message);\r\n                })\r\n        },1000);\r\n    }, []); \r\n\r\n    // useEffect(() => {\r\n    //     console.log('use effect ran');\r\n    //     console.log(name);\r\n    // }, [name]); \r\n    // this useEffect hook is gonna run,everytime there is a rerender\r\n    // e.g. data change or page reload\r\n    // [] is dependency array, empty [] means only run after first initial render\r\n    // [name] means only run this hook when name variable is changed\r\n\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            {error &&  <div>{ error }</div>}\r\n            {isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs={blogs}  title='All blogs'/>}\r\n            {/* blogs={blogs} is a prop */}\r\n            {/* when accessing it, it is stored in props object, check bloglist.js */}\r\n            {/* <BlogList blogs={blogs.filter((blog) => blog.author == 'mario' )}  title=\"Mario's blogs\" handleDelete={handleDelete}/> */}\r\n            <button onClick={() => setName('Luigi')}>Change name</button>\r\n            <p>{ name }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAACC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;;EAExC;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,MAAM;MACbC,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,GAAG,IAAI;QAAI;QACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAC;UACR,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACzD;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE,CAAC,CAAE;MACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBd,QAAQ,CAACc,IAAI,CAAC;QACdZ,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,CACDe,KAAK,CAACC,GAAG,IAAI;QACVd,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,CAAC;IACV,CAAC,EAAC,IAAI,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,WAChBhB,KAAK,iBAAK;MAAA,UAAOA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,EAC9BF,SAAS,iBAAI;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM,EAClCF,KAAK,iBAAI,QAAC,QAAQ;MAAC,KAAK,EAAEA,KAAM;MAAE,KAAK,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAItD;MAAQ,OAAO,EAAE,MAAMO,OAAO,CAAC,OAAO,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAA,UAAKD;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEd,CAAC;AAAA,GAtDKP,IAAI;AAAA,KAAJA,IAAI;AAwDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}