{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17222\\\\Documents\\\\Visual Studio 2019\\\\react_tuts\\\\dojo-blog\\\\src\\\\BlogsDetails.js\",\n  _s = $RefreshSig$();\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // hook\n  // this allows us to use parameters in the routes, e.g. http://localhost:3000/blogs/3\n  // what we need to do is to destructure it in {}\n\n  const {\n    data: blog,\n    error,\n    isPending\n  } = useFetch('http://localhost:8000/blogs/' + id);\n  //here we use this useFetch() hook to get { data, error, isPending } \n  //properties\n\n  const history = useHistory;\n  const handleClick = () => {\n    fetch('http://localhost:8000/blogs/' + blog.id, {\n      method: 'DELETE' // just ask JSON serve to delete blog with that id\n    }).then(() => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-details\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this), blog && /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Written by \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogDetails, \"ZGxoRlualxFN6E+d8KwZsJk56vk=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = BlogDetails;\nexport default BlogDetails;\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["useHistory","useParams","useFetch","BlogDetails","id","data","blog","error","isPending","history","handleClick","fetch","method","then","title","author","body"],"sources":["C:/Users/17222/Documents/Visual Studio 2019/react_tuts/dojo-blog/src/BlogsDetails.js"],"sourcesContent":["import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams(); // hook\r\n    // this allows us to use parameters in the routes, e.g. http://localhost:3000/blogs/3\r\n    // what we need to do is to destructure it in {}\r\n    \r\n    const { data:blog, error, isPending } = useFetch('http://localhost:8000/blogs/'+ id);\r\n    //here we use this useFetch() hook to get { data, error, isPending } \r\n    //properties\r\n\r\n    const history = useHistory;\r\n\r\n    const handleClick= () => {\r\n        fetch('http://localhost:8000/blogs/'+ blog.id,{\r\n            method:'DELETE'  // just ask JSON serve to delete blog with that id\r\n        }).then(() => {\r\n\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div> }\r\n            { error && <div>{ error }</div> }\r\n            {blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by { blog.author }</p>\r\n                    <div>{ blog.body }</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,EAAE,CAAC,CAAC;EAC5B;EACA;;EAEA,MAAM;IAAEI,IAAI,EAACC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGN,QAAQ,CAAC,8BAA8B,GAAEE,EAAE,CAAC;EACpF;EACA;;EAEA,MAAMK,OAAO,GAAGT,UAAU;EAE1B,MAAMU,WAAW,GAAE,MAAM;IACrBC,KAAK,CAAC,8BAA8B,GAAEL,IAAI,CAACF,EAAE,EAAC;MAC1CQ,MAAM,EAAC,QAAQ,CAAE;IACrB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,CAEd,CAAC,CAAC;EACN,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,WACvBL,SAAS,iBAAI;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM,EAClCD,KAAK,iBAAI;MAAA,UAAOA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,EAC9BD,IAAI,iBACD;MAAA,wBACI;QAAA,UAAMA,IAAI,CAACQ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACvB;QAAA,WAAG,aAAW,EAAER,IAAI,CAACS,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACjC;QAAA,UAAOT,IAAI,CAACU;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAQ,OAAO,EAAEN,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEpD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAA,GAjCKP,WAAW;EAAA,QACEF,SAAS,EAIgBC,QAAQ;AAAA;AAAA,KAL9CC,WAAW;AAmCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}