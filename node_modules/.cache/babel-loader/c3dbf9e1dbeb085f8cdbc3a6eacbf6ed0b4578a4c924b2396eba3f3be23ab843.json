{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17222\\\\Documents\\\\Visual Studio 2019\\\\react_tuts\\\\dojo-blog\\\\src\\\\Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  let name = 'mario';\n  const handleClick = e => {\n    console.log('hello,ninjas', e);\n  };\n  const handleClickAgain = (name, e) => {\n    console.log('Hello ' + name, e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleClickAgain('howie', e);\n      },\n      children: \" Click me again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Home","name","handleClick","e","console","log","handleClickAgain"],"sources":["C:/Users/17222/Documents/Visual Studio 2019/react_tuts/dojo-blog/src/Home.js"],"sourcesContent":["const Home = () => {\r\n    let name = 'mario';\r\n\r\n    const handleClick = (e) => {\r\n\r\n        console.log('hello,ninjas',e);\r\n    }\r\n\r\n    const handleClickAgain = (name,e) =>{\r\n        console.log('Hello ' + name,e)\r\n    }\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            <h2>Homepage</h2>\r\n            <button onClick={handleClick}>Click me</button>\r\n            {/* here is not handleClick() because we dont want to invoke function,\r\n            if we use handleclick() then it will be invoked enev without user clcking it\r\n            , so we use handleClick to set a reference to that function*/}\r\n            <button onClick={(e) => {handleClickAgain('howie',e)}}> Click me again</button>\r\n            {/* if we want to pass in a variable to the function, we cannot use handleClickAgain('variable')\r\n            because this will trigger the function directly. instead we use wrap the \r\n            function reference in anonymous function, which means we dont store it in a constant or anything,\r\n            we just creating it inline. but this function will get invoked when user click */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;"],"mappings":";;AAAA,MAAMA,IAAI,GAAG,MAAM;EACf,IAAIC,IAAI,GAAG,OAAO;EAElB,MAAMC,WAAW,GAAIC,CAAC,IAAK;IAEvBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACF,CAAC,CAAC;EACjC,CAAC;EAED,MAAMG,gBAAgB,GAAG,CAACL,IAAI,EAACE,CAAC,KAAI;IAChCC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGJ,IAAI,EAACE,CAAC,CAAC;EAClC,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjB;MAAQ,OAAO,EAAED,WAAY;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAI/C;MAAQ,OAAO,EAAGC,CAAC,IAAK;QAACG,gBAAgB,CAAC,OAAO,EAACH,CAAC,CAAC;MAAA,CAAE;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAK7E;AAEd,CAAC;AAAA,KA1BKH,IAAI;AA4BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}