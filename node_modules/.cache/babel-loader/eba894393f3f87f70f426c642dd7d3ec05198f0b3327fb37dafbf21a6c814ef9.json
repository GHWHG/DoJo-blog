{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17222\\\\Documents\\\\Visual Studio 2019\\\\react_tuts\\\\dojo-blog\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState([{\n    title: 'My new website',\n    body: 'lorem ipsum...',\n    author: 'mario',\n    id: 1\n  }, {\n    title: 'Welcome party!',\n    body: 'lorem ipsum...',\n    author: 'yoshi',\n    id: 2\n  }, {\n    title: 'Web dev top tips',\n    body: 'lorem ipsum...',\n    author: 'mario',\n    id: 3\n  }]);\n  const [name, setName] = useState('Mario');\n  const handleDelete = id => {\n    const newBlogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlogs);\n  };\n  useEffect(() => {\n    console.log('use effect ran');\n    console.log(blogs);\n  }, []);\n  // this useEffect hook is gonna run,everytime there is a rerender\n  // e.g. data change or page reload\n  // [] is dependency array, empty [] means only run after first initial render\n  // [name] means only run this hook when name variable is changed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All blogs\",\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName('Luigi'),\n      children: \"Change name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"422dgkIeBve5iylWK3bZWihRiaI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","BlogList","Home","blogs","setBlogs","title","body","author","id","name","setName","handleDelete","newBlogs","filter","blog","console","log"],"sources":["C:/Users/17222/Documents/Visual Studio 2019/react_tuts/dojo-blog/src/Home.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport BlogList from \"./BlogList\";\r\n\r\nconst Home = () => {\r\n    const [blogs, setBlogs] = useState([\r\n        { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\r\n        { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },\r\n        { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }\r\n      ]);\r\n\r\n    const [name,setName] = useState('Mario');\r\n\r\n    const handleDelete = (id) => {\r\n        const newBlogs = blogs.filter(blog => blog.id !== id );\r\n        setBlogs(newBlogs);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('use effect ran');\r\n        console.log(blogs);\r\n    }, []); \r\n    // this useEffect hook is gonna run,everytime there is a rerender\r\n    // e.g. data change or page reload\r\n    // [] is dependency array, empty [] means only run after first initial render\r\n    // [name] means only run this hook when name variable is changed\r\n\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            <BlogList blogs={blogs}  title='All blogs' handleDelete={handleDelete}/>\r\n            {/* blogs={blogs} is a prop */}\r\n            {/* when accessing it, it is stored in props object, check bloglist.js */}\r\n            {/* <BlogList blogs={blogs.filter((blog) => blog.author == 'mario' )}  title=\"Mario's blogs\" handleDelete={handleDelete}/> */}\r\n            <button onClick={() => setName('Luigi')}>Change name</button>\r\n            <p>{ name }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC/B;IAAEM,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,OAAO;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC3E;IAAEH,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,OAAO;IAAEC,EAAE,EAAE;EAAE,CAAC,EAC3E;IAAEH,KAAK,EAAE,kBAAkB;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,OAAO;IAAEC,EAAE,EAAE;EAAE,CAAC,CAC9E,CAAC;EAEJ,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAExC,MAAMY,YAAY,GAAIH,EAAE,IAAK;IACzB,MAAMI,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAE;IACtDJ,QAAQ,CAACQ,QAAQ,CAAC;EACtB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;;EAGA,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB,QAAC,QAAQ;MAAC,KAAK,EAAEA,KAAM;MAAE,KAAK,EAAC,WAAW;MAAC,YAAY,EAAEQ;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eAIxE;MAAQ,OAAO,EAAE,MAAMD,OAAO,CAAC,OAAO,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAA,UAAKD;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEd,CAAC;AAAA,GAlCKP,IAAI;AAAA,KAAJA,IAAI;AAoCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}